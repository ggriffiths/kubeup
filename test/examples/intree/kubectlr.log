I0430 17:55:00.527125       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx", UID:"5b07e75e-f6d3-44c8-877a-bd896556d804", APIVersion:"apps/v1", ResourceVersion:"2966", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-n5drd
I0430 17:55:00.533243       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx", UID:"5b07e75e-f6d3-44c8-877a-bd896556d804", APIVersion:"apps/v1", ResourceVersion:"2966", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-j8kzv
I0430 17:55:00.536023       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx", UID:"5b07e75e-f6d3-44c8-877a-bd896556d804", APIVersion:"apps/v1", ResourceVersion:"2966", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-xfdzr
E0430 17:55:00.585150       1 daemon_controller.go:290] kube-system/portworx failed with : error storing status for daemon set &v1.DaemonSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"portworx", GenerateName:"", Namespace:"kube-system", SelfLink:"/apis/apps/v1/namespaces/kube-system/daemonsets/portworx", UID:"5b07e75e-f6d3-44c8-877a-bd896556d804", ResourceVersion:"2966", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63723866100, loc:(*time.Location)(0x6bad260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx"}, Annotations:map[string]string{"deprecated.daemonset.template.generation":"1", "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"portworx.com/install-source\":\"http://70.0.0.129:8080/?mc=false\\u0026kbver=1.17.0\\u0026b=true\\u0026f=true\\u0026c=px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1\\u0026stork=true\\u0026csi=true\\u0026st=k8s\\u0026csidcc=false\"},\"labels\":{\"name\":\"portworx\"},\"name\":\"portworx\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":0,\"selector\":{\"matchLabels\":{\"name\":\"portworx\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"portworx\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"px/enabled\",\"operator\":\"NotIn\",\"values\":[\"false\"]},{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"DoesNotExist\"}]}]}}},\"containers\":[{\"args\":[\"-c\",\"px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1\",\"-A\",\"-f\",\"-secret_type\",\"k8s\",\"-b\",\"-x\",\"kubernetes\"],\"env\":[{\"name\":\"AUTO_NODE_RECOVERY_TIMEOUT_IN_SECS\",\"value\":\"1500\"},{\"name\":\"PX_TEMPLATE_VERSION\",\"value\":\"v4\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///var/lib/kubelet/plugins/pxd.portworx.com/csi.sock\"},{\"name\":\"PX_IMAGE\",\"value\":\"portworx/px-dev-image:grant\"},{\"name\":\"REGISTRY_USER\",\"value\":\"pwxbuild\"},{\"name\":\"REGISTRY_PASS\",\"value\":\"fridaydemos\"},{\"name\":\"PX_LOGLEVEL\",\"value\":\"trace\"},{\"name\":\"PORTWORX_AUTH_JWT_ISSUER\",\"value\":\"openstorage.io\"},{\"name\":\"PORTWORX_AUTH_JWT_SHAREDSECRET\",\"value\":\"mysecret\"},{\"name\":\"PORTWORX_AUTH_SYSTEM_KEY\",\"value\":\"mysecret\"}],\"image\":\"portworx/oci-monitor:2.3.4\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"httpGet\":{\"host\":\"127.0.0.1\",\"path\":\"/status\",\"port\":9001},\"initialDelaySeconds\":840,\"periodSeconds\":30},\"name\":\"portworx\",\"readinessProbe\":{\"httpGet\":{\"host\":\"127.0.0.1\",\"path\":\"/health\",\"port\":9015},\"periodSeconds\":10},\"securityContext\":{\"privileged\":true},\"terminationMessagePath\":\"/tmp/px-termination-log\",\"volumeMounts\":[{\"mountPath\":\"/var/cores\",\"name\":\"diagsdump\"},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\"},{\"mountPath\":\"/run/containerd\",\"name\":\"containerdsock\"},{\"mountPath\":\"/var/run/crio\",\"name\":\"criosock\"},{\"mountPath\":\"/etc/pwx\",\"name\":\"etcpwx\"},{\"mountPath\":\"/dev\",\"name\":\"dev\"},{\"mountPath\":\"/opt/pwx\",\"name\":\"optpwx\"},{\"mountPath\":\"/host_proc\",\"name\":\"procmount\"},{\"mountPath\":\"/etc/systemd/system\",\"name\":\"sysdmount\"},{\"mountPath\":\"/var/run/log\",\"name\":\"journalmount1\",\"readOnly\":true},{\"mountPath\":\"/var/log\",\"name\":\"journalmount2\",\"readOnly\":true},{\"mountPath\":\"/var/run/dbus\",\"name\":\"dbusmount\"}]},{\"args\":[\"--v=5\",\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=/var/lib/kubelet/plugins/pxd.portworx.com/csi.sock\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\",\"imagePullPolicy\":\"Always\",\"name\":\"csi-node-driver-registrar\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"csi-driver-path\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]}],\"hostNetwork\":true,\"hostPID\":false,\"restartPolicy\":\"Always\",\"serviceAccountName\":\"px-account\",\"volumes\":[{\"hostPath\":{\"path\":\"/var/cores\"},\"name\":\"diagsdump\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"},{\"hostPath\":{\"path\":\"/run/containerd\"},\"name\":\"containerdsock\"},{\"hostPath\":{\"path\":\"/var/run/crio\"},\"name\":\"criosock\"},{\"hostPath\":{\"path\":\"/etc/pwx\"},\"name\":\"etcpwx\"},{\"hostPath\":{\"path\":\"/dev\"},\"name\":\"dev\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/pxd.portworx.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"csi-driver-path\"},{\"hostPath\":{\"path\":\"/opt/pwx\"},\"name\":\"optpwx\"},{\"hostPath\":{\"path\":\"/proc\"},\"name\":\"procmount\"},{\"hostPath\":{\"path\":\"/etc/systemd/system\"},\"name\":\"sysdmount\"},{\"hostPath\":{\"path\":\"/var/run/log\"},\"name\":\"journalmount1\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"journalmount2\"},{\"hostPath\":{\"path\":\"/var/run/dbus\"},\"name\":\"dbusmount\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n", "portworx.com/install-source":"http://70.0.0.129:8080/?mc=false&kbver=1.17.0&b=true&f=true&c=px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1&stork=true&csi=true&st=k8s&csidcc=false"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DaemonSetSpec{Selector:(*v1.LabelSelector)(0xc001f5c8c0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"diagsdump", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c8e0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dockersock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c900), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"containerdsock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c920), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"criosock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c940), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"etcpwx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c960), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dev", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c980), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"registration-dir", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c9a0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"csi-driver-path", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c9c0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"optpwx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5c9e0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"procmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5ca00), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"sysdmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5ca20), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"journalmount1", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5ca40), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"journalmount2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5ca60), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dbusmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f5ca80), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"portworx", Image:"portworx/oci-monitor:2.3.4", Command:[]string(nil), Args:[]string{"-c", "px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1", "-A", "-f", "-secret_type", "k8s", "-b", "-x", "kubernetes"}, WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"AUTO_NODE_RECOVERY_TIMEOUT_IN_SECS", Value:"1500", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_TEMPLATE_VERSION", Value:"v4", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"CSI_ENDPOINT", Value:"unix:///var/lib/kubelet/plugins/pxd.portworx.com/csi.sock", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_IMAGE", Value:"portworx/px-dev-image:grant", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_USER", Value:"pwxbuild", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_PASS", Value:"fridaydemos", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_LOGLEVEL", Value:"trace", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_JWT_ISSUER", Value:"openstorage.io", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_JWT_SHAREDSECRET", Value:"mysecret", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_SYSTEM_KEY", Value:"mysecret", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"diagsdump", ReadOnly:false, MountPath:"/var/cores", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dockersock", ReadOnly:false, MountPath:"/var/run/docker.sock", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"containerdsock", ReadOnly:false, MountPath:"/run/containerd", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"criosock", ReadOnly:false, MountPath:"/var/run/crio", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"etcpwx", ReadOnly:false, MountPath:"/etc/pwx", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dev", ReadOnly:false, MountPath:"/dev", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"optpwx", ReadOnly:false, MountPath:"/opt/pwx", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"procmount", ReadOnly:false, MountPath:"/host_proc", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"sysdmount", ReadOnly:false, MountPath:"/etc/systemd/system", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"journalmount1", ReadOnly:true, MountPath:"/var/run/log", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"journalmount2", ReadOnly:true, MountPath:"/var/log", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dbusmount", ReadOnly:false, MountPath:"/var/run/dbus", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc001d9ccc0), ReadinessProbe:(*v1.Probe)(0xc001d9ccf0), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/tmp/px-termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(0xc0012b22d0), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"csi-node-driver-registrar", Image:"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0", Command:[]string(nil), Args:[]string{"--v=5", "--csi-address=$(ADDRESS)", "--kubelet-registration-path=/var/lib/kubelet/plugins/pxd.portworx.com/csi.sock"}, WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"ADDRESS", Value:"/csi/csi.sock", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"KUBE_NODE_NAME", Value:"", ValueFrom:(*v1.EnvVarSource)(0xc001f5cae0)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"csi-driver-path", ReadOnly:false, MountPath:"/csi", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"registration-dir", ReadOnly:false, MountPath:"/registration", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(0xc0012b23c0), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001d50778), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"px-account", DeprecatedServiceAccount:"px-account", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", HostNetwork:true, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002108360), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc001f5cb20), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil)}}, UpdateStrategy:v1.DaemonSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDaemonSet)(0xc001e2c010)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc001d507c8)}, Status:v1.DaemonSetStatus{CurrentNumberScheduled:0, NumberMisscheduled:0, DesiredNumberScheduled:0, NumberReady:0, ObservedGeneration:0, UpdatedNumberScheduled:0, NumberAvailable:0, NumberUnavailable:0, CollisionCount:(*int32)(nil), Conditions:[]v1.DaemonSetCondition(nil)}}: Operation cannot be fulfilled on daemonsets.apps "portworx": the object has been modified; please apply your changes to the latest version and try again
E0430 17:55:00.606385       1 daemon_controller.go:290] kube-system/portworx failed with : error storing status for daemon set &v1.DaemonSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"portworx", GenerateName:"", Namespace:"kube-system", SelfLink:"/apis/apps/v1/namespaces/kube-system/daemonsets/portworx", UID:"5b07e75e-f6d3-44c8-877a-bd896556d804", ResourceVersion:"2975", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63723866100, loc:(*time.Location)(0x6bad260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx"}, Annotations:map[string]string{"deprecated.daemonset.template.generation":"1", "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"portworx.com/install-source\":\"http://70.0.0.129:8080/?mc=false\\u0026kbver=1.17.0\\u0026b=true\\u0026f=true\\u0026c=px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1\\u0026stork=true\\u0026csi=true\\u0026st=k8s\\u0026csidcc=false\"},\"labels\":{\"name\":\"portworx\"},\"name\":\"portworx\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":0,\"selector\":{\"matchLabels\":{\"name\":\"portworx\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"portworx\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"px/enabled\",\"operator\":\"NotIn\",\"values\":[\"false\"]},{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"DoesNotExist\"}]}]}}},\"containers\":[{\"args\":[\"-c\",\"px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1\",\"-A\",\"-f\",\"-secret_type\",\"k8s\",\"-b\",\"-x\",\"kubernetes\"],\"env\":[{\"name\":\"AUTO_NODE_RECOVERY_TIMEOUT_IN_SECS\",\"value\":\"1500\"},{\"name\":\"PX_TEMPLATE_VERSION\",\"value\":\"v4\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///var/lib/kubelet/plugins/pxd.portworx.com/csi.sock\"},{\"name\":\"PX_IMAGE\",\"value\":\"portworx/px-dev-image:grant\"},{\"name\":\"REGISTRY_USER\",\"value\":\"pwxbuild\"},{\"name\":\"REGISTRY_PASS\",\"value\":\"fridaydemos\"},{\"name\":\"PX_LOGLEVEL\",\"value\":\"trace\"},{\"name\":\"PORTWORX_AUTH_JWT_ISSUER\",\"value\":\"openstorage.io\"},{\"name\":\"PORTWORX_AUTH_JWT_SHAREDSECRET\",\"value\":\"mysecret\"},{\"name\":\"PORTWORX_AUTH_SYSTEM_KEY\",\"value\":\"mysecret\"}],\"image\":\"portworx/oci-monitor:2.3.4\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"httpGet\":{\"host\":\"127.0.0.1\",\"path\":\"/status\",\"port\":9001},\"initialDelaySeconds\":840,\"periodSeconds\":30},\"name\":\"portworx\",\"readinessProbe\":{\"httpGet\":{\"host\":\"127.0.0.1\",\"path\":\"/health\",\"port\":9015},\"periodSeconds\":10},\"securityContext\":{\"privileged\":true},\"terminationMessagePath\":\"/tmp/px-termination-log\",\"volumeMounts\":[{\"mountPath\":\"/var/cores\",\"name\":\"diagsdump\"},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\"},{\"mountPath\":\"/run/containerd\",\"name\":\"containerdsock\"},{\"mountPath\":\"/var/run/crio\",\"name\":\"criosock\"},{\"mountPath\":\"/etc/pwx\",\"name\":\"etcpwx\"},{\"mountPath\":\"/dev\",\"name\":\"dev\"},{\"mountPath\":\"/opt/pwx\",\"name\":\"optpwx\"},{\"mountPath\":\"/host_proc\",\"name\":\"procmount\"},{\"mountPath\":\"/etc/systemd/system\",\"name\":\"sysdmount\"},{\"mountPath\":\"/var/run/log\",\"name\":\"journalmount1\",\"readOnly\":true},{\"mountPath\":\"/var/log\",\"name\":\"journalmount2\",\"readOnly\":true},{\"mountPath\":\"/var/run/dbus\",\"name\":\"dbusmount\"}]},{\"args\":[\"--v=5\",\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=/var/lib/kubelet/plugins/pxd.portworx.com/csi.sock\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\",\"imagePullPolicy\":\"Always\",\"name\":\"csi-node-driver-registrar\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"csi-driver-path\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]}],\"hostNetwork\":true,\"hostPID\":false,\"restartPolicy\":\"Always\",\"serviceAccountName\":\"px-account\",\"volumes\":[{\"hostPath\":{\"path\":\"/var/cores\"},\"name\":\"diagsdump\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"},{\"hostPath\":{\"path\":\"/run/containerd\"},\"name\":\"containerdsock\"},{\"hostPath\":{\"path\":\"/var/run/crio\"},\"name\":\"criosock\"},{\"hostPath\":{\"path\":\"/etc/pwx\"},\"name\":\"etcpwx\"},{\"hostPath\":{\"path\":\"/dev\"},\"name\":\"dev\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/pxd.portworx.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"csi-driver-path\"},{\"hostPath\":{\"path\":\"/opt/pwx\"},\"name\":\"optpwx\"},{\"hostPath\":{\"path\":\"/proc\"},\"name\":\"procmount\"},{\"hostPath\":{\"path\":\"/etc/systemd/system\"},\"name\":\"sysdmount\"},{\"hostPath\":{\"path\":\"/var/run/log\"},\"name\":\"journalmount1\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"journalmount2\"},{\"hostPath\":{\"path\":\"/var/run/dbus\"},\"name\":\"dbusmount\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n", "portworx.com/install-source":"http://70.0.0.129:8080/?mc=false&kbver=1.17.0&b=true&f=true&c=px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1&stork=true&csi=true&st=k8s&csidcc=false"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DaemonSetSpec{Selector:(*v1.LabelSelector)(0xc001f09e20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"diagsdump", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09e40), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dockersock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09e60), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"containerdsock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09e80), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"criosock", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09ea0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"etcpwx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09ec0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dev", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09ee0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"registration-dir", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09f00), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"csi-driver-path", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09f20), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"optpwx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09f40), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"procmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09f60), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"sysdmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09f80), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"journalmount1", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09fa0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"journalmount2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09fc0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"dbusmount", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc001f09fe0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"portworx", Image:"portworx/oci-monitor:2.3.4", Command:[]string(nil), Args:[]string{"-c", "px-cluster-72d387a1-6e69-46e8-8799-7e9b08ee8fe1", "-A", "-f", "-secret_type", "k8s", "-b", "-x", "kubernetes"}, WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"AUTO_NODE_RECOVERY_TIMEOUT_IN_SECS", Value:"1500", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_TEMPLATE_VERSION", Value:"v4", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"CSI_ENDPOINT", Value:"unix:///var/lib/kubelet/plugins/pxd.portworx.com/csi.sock", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_IMAGE", Value:"portworx/px-dev-image:grant", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_USER", Value:"pwxbuild", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_PASS", Value:"fridaydemos", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PX_LOGLEVEL", Value:"trace", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_JWT_ISSUER", Value:"openstorage.io", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_JWT_SHAREDSECRET", Value:"mysecret", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"PORTWORX_AUTH_SYSTEM_KEY", Value:"mysecret", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"diagsdump", ReadOnly:false, MountPath:"/var/cores", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dockersock", ReadOnly:false, MountPath:"/var/run/docker.sock", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"containerdsock", ReadOnly:false, MountPath:"/run/containerd", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"criosock", ReadOnly:false, MountPath:"/var/run/crio", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"etcpwx", ReadOnly:false, MountPath:"/etc/pwx", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dev", ReadOnly:false, MountPath:"/dev", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"optpwx", ReadOnly:false, MountPath:"/opt/pwx", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"procmount", ReadOnly:false, MountPath:"/host_proc", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"sysdmount", ReadOnly:false, MountPath:"/etc/systemd/system", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"journalmount1", ReadOnly:true, MountPath:"/var/run/log", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"journalmount2", ReadOnly:true, MountPath:"/var/log", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"dbusmount", ReadOnly:false, MountPath:"/var/run/dbus", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc001ee6330), ReadinessProbe:(*v1.Probe)(0xc001ee6360), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/tmp/px-termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(0xc001b30cd0), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"csi-node-driver-registrar", Image:"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0", Command:[]string(nil), Args:[]string{"--v=5", "--csi-address=$(ADDRESS)", "--kubelet-registration-path=/var/lib/kubelet/plugins/pxd.portworx.com/csi.sock"}, WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"ADDRESS", Value:"/csi/csi.sock", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"KUBE_NODE_NAME", Value:"", ValueFrom:(*v1.EnvVarSource)(0xc001ec0040)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"csi-driver-path", ReadOnly:false, MountPath:"/csi", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"registration-dir", ReadOnly:false, MountPath:"/registration", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(0xc001b30dc0), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0020c9478), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"px-account", DeprecatedServiceAccount:"px-account", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", HostNetwork:true, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001e9a9c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc001ec0080), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil)}}, UpdateStrategy:v1.DaemonSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDaemonSet)(0xc00056e2a8)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0020c94c8)}, Status:v1.DaemonSetStatus{CurrentNumberScheduled:2, NumberMisscheduled:0, DesiredNumberScheduled:3, NumberReady:0, ObservedGeneration:1, UpdatedNumberScheduled:2, NumberAvailable:0, NumberUnavailable:3, CollisionCount:(*int32)(nil), Conditions:[]v1.DaemonSetCondition(nil)}}: Operation cannot be fulfilled on daemonsets.apps "portworx": the object has been modified; please apply your changes to the latest version and try again
I0430 17:55:00.805049       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx-api", UID:"7c286aa2-26c3-446a-8911-7fb9ec8a521d", APIVersion:"apps/v1", ResourceVersion:"3034", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-api-dxvpb
I0430 17:55:00.819198       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx-api", UID:"7c286aa2-26c3-446a-8911-7fb9ec8a521d", APIVersion:"apps/v1", ResourceVersion:"3034", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-api-xp2nw
I0430 17:55:00.827846       1 event.go:281] Event(v1.ObjectReference{Kind:"DaemonSet", Namespace:"kube-system", Name:"portworx-api", UID:"7c286aa2-26c3-446a-8911-7fb9ec8a521d", APIVersion:"apps/v1", ResourceVersion:"3034", FieldPath:""}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: portworx-api-q9hq5
E0430 17:55:00.942574       1 daemon_controller.go:290] kube-system/portworx-api failed with : error storing status for daemon set &v1.DaemonSet{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"portworx-api", GenerateName:"", Namespace:"kube-system", SelfLink:"/apis/apps/v1/namespaces/kube-system/daemonsets/portworx-api", UID:"7c286aa2-26c3-446a-8911-7fb9ec8a521d", ResourceVersion:"3043", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63723866100, loc:(*time.Location)(0x6bad260)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx-api"}, Annotations:map[string]string{"deprecated.daemonset.template.generation":"1", "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"name\":\"portworx-api\"},\"name\":\"portworx-api\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":0,\"selector\":{\"matchLabels\":{\"name\":\"portworx-api\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"portworx-api\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"px/enabled\",\"operator\":\"NotIn\",\"values\":[\"false\"]},{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"DoesNotExist\"}]}]}}},\"containers\":[{\"image\":\"k8s.gcr.io/pause:3.1\",\"imagePullPolicy\":\"Always\",\"name\":\"portworx-api\",\"readinessProbe\":{\"httpGet\":{\"host\":\"127.0.0.1\",\"path\":\"/status\",\"port\":9001},\"periodSeconds\":10}}],\"hostNetwork\":true,\"hostPID\":false,\"restartPolicy\":\"Always\",\"serviceAccountName\":\"px-account\"}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"100%\"},\"type\":\"RollingUpdate\"}}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DaemonSetSpec{Selector:(*v1.LabelSelector)(0xc0006d0860), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"portworx-api"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"portworx-api", Image:"k8s.gcr.io/pause:3.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(0xc000abc930), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000ac8db8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"px-account", DeprecatedServiceAccount:"px-account", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", HostNetwork:true, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001c6f380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc0006d0880), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil)}}, UpdateStrategy:v1.DaemonSetUpdateStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDaemonSet)(0xc00000eac0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000ac8e1c)}, Status:v1.DaemonSetStatus{CurrentNumberScheduled:2, NumberMisscheduled:0, DesiredNumberScheduled:3, NumberReady:0, ObservedGeneration:1, UpdatedNumberScheduled:2, NumberAvailable:0, NumberUnavailable:3, CollisionCount:(*int32)(nil), Conditions:[]v1.DaemonSetCondition(nil)}}: Operation cannot be fulfilled on daemonsets.apps "portworx-api": the object has been modified; please apply your changes to the latest version and try again
E0430 18:57:37.154328       1 portworx_util.go:252] portworx client failed driver versions check. Err: Get http://:9001/v1/osd-volumes/versions: dial tcp :9001: connect: connection refused
E0430 18:57:37.154771       1 portworx_util.go:252] portworx client failed driver versions check. Err: Get http://:9001/v1/osd-volumes/versions: dial tcp :9001: connect: connection refused
I0430 18:57:37.169984       1 portworx_util.go:300] Using portworx cluster service at: 10.96.57.6:9001 as api endpoint
I0430 18:57:37.170045       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-0
I0430 18:57:37.846994       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-0
I0430 18:57:37.853184       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-0", UID:"204c7c65-d09a-4221-812c-4a6f6f305eb4", APIVersion:"v1", ResourceVersion:"21251", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-204c7c65-d09a-4221-812c-4a6f6f305eb4 using kubernetes.io/portworx-volume
I0430 18:57:58.051082       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-1
I0430 18:57:58.591905       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-1
I0430 18:57:58.598019       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-1", UID:"c32e6a3f-f0ee-48e9-a617-155d07f3bb03", APIVersion:"v1", ResourceVersion:"21372", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-c32e6a3f-f0ee-48e9-a617-155d07f3bb03 using kubernetes.io/portworx-volume
I0430 18:58:09.955374       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-2
I0430 18:58:10.512704       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-2
I0430 18:58:10.517265       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-2", UID:"a132b7da-a1f7-4791-b513-b6f2dcf465b2", APIVersion:"v1", ResourceVersion:"21454", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-a132b7da-a1f7-4791-b513-b6f2dcf465b2 using kubernetes.io/portworx-volume
I0430 19:06:10.110263       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-0
I0430 19:06:20.810744       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-0
I0430 19:06:20.815598       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-0", UID:"3e6d5e95-2a37-457e-8af6-82787b5313d7", APIVersion:"v1", ResourceVersion:"23886", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-3e6d5e95-2a37-457e-8af6-82787b5313d7 using kubernetes.io/portworx-volume
I0430 19:06:25.808942       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-1
I0430 19:06:26.416359       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-1
I0430 19:06:26.421523       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-1", UID:"05266659-bc94-490f-8bfd-07f309dd240c", APIVersion:"v1", ResourceVersion:"23984", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-05266659-bc94-490f-8bfd-07f309dd240c using kubernetes.io/portworx-volume
I0430 19:06:29.896894       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-2
I0430 19:06:30.460302       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-2
I0430 19:06:30.464470       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-2", UID:"c238bebb-27b6-40f2-b794-fec0381b2694", APIVersion:"v1", ResourceVersion:"24027", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-c238bebb-27b6-40f2-b794-fec0381b2694 using kubernetes.io/portworx-volume
I0430 19:15:43.956695       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-0
I0430 19:15:44.525499       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-0
I0430 19:15:44.530112       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-0", UID:"03a3b712-b8c4-45c7-9ec4-a7446c4ac29e", APIVersion:"v1", ResourceVersion:"26746", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-03a3b712-b8c4-45c7-9ec4-a7446c4ac29e using kubernetes.io/portworx-volume
I0430 19:15:47.996088       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-1
I0430 19:15:48.562623       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-1
I0430 19:15:48.567011       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-1", UID:"6e653929-2873-42a7-98ad-a5ce0fc3d396", APIVersion:"v1", ResourceVersion:"26785", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-6e653929-2873-42a7-98ad-a5ce0fc3d396 using kubernetes.io/portworx-volume
I0430 19:15:51.917736       1 portworx_util.go:58] Creating Portworx volume for PVC: www-web-2
I0430 19:16:02.652312       1 portworx_util.go:112] Successfully created Portworx volume for PVC: www-web-2
I0430 19:16:02.657192       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"www-web-2", UID:"32aa58f4-cbe6-4073-b480-e3a1f980f486", APIVersion:"v1", ResourceVersion:"26825", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-32aa58f4-cbe6-4073-b480-e3a1f980f486 using kubernetes.io/portworx-volume
I0430 20:11:05.929442       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 20:11:07.018525       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 20:11:07.023393       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"2f84ed6b-2654-4190-a783-67967ef2a3bf", APIVersion:"v1", ResourceVersion:"42737", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-2f84ed6b-2654-4190-a783-67967ef2a3bf using kubernetes.io/portworx-volume
I0430 20:14:49.634666       1 portworx_util.go:58] Creating Portworx volume for PVC: pvc-auth
I0430 20:14:50.222084       1 portworx_util.go:112] Successfully created Portworx volume for PVC: pvc-auth
I0430 20:14:50.226856       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"pvc-auth", UID:"43a07ded-2532-40cc-aa88-7f5f67c788e1", APIVersion:"v1", ResourceVersion:"43821", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-43a07ded-2532-40cc-aa88-7f5f67c788e1 using kubernetes.io/portworx-volume
I0430 20:29:51.893311       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:29:51.894200       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:29:55.567159       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:30:10.567586       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:30:25.567329       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:30:40.568070       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
E0430 20:30:55.567791       1 pv_controller.go:1361] error finding provisioning plugin for claim default/no-auth-mysql-data: storageclass.storage.k8s.io "portworx-sc-auth" not found
I0430 20:30:55.568161       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48152", FieldPath:""}): type: 'Warning' reason: 'ProvisioningFailed' storageclass.storage.k8s.io "portworx-sc-auth" not found
E0430 20:31:02.599224       1 pv_controller.go:1361] error finding provisioning plugin for claim default/no-auth-mysql-data: storageclass.storage.k8s.io "portworx-sc-auth" not found
I0430 20:31:02.599495       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"846aef74-9341-4eda-b5b6-d7c373ec7245", APIVersion:"v1", ResourceVersion:"48512", FieldPath:""}): type: 'Warning' reason: 'ProvisioningFailed' storageclass.storage.k8s.io "portworx-sc-auth" not found
I0430 20:31:13.157279       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"9e6c2df0-b38d-4d31-bc59-c05f1df2c8af", APIVersion:"v1", ResourceVersion:"48565", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:31:13.158432       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"no-auth-mysql-data", UID:"9e6c2df0-b38d-4d31-bc59-c05f1df2c8af", APIVersion:"v1", ResourceVersion:"48565", FieldPath:""}): type: 'Normal' reason: 'ExternalProvisioning' waiting for a volume to be created, either by external provisioner "pxd.portworx.com" or manually created by system administrator
I0430 20:38:23.015550       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 20:38:24.285430       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 20:38:24.290246       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"34ca5783-8ced-4868-b92a-c43df2f2089c", APIVersion:"v1", ResourceVersion:"50649", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-34ca5783-8ced-4868-b92a-c43df2f2089c using kubernetes.io/portworx-volume
I0430 20:42:12.612306       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 20:42:13.581275       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 20:42:13.586313       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"1f273118-87db-421c-bb39-23e9925f7c5f", APIVersion:"v1", ResourceVersion:"51765", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-1f273118-87db-421c-bb39-23e9925f7c5f using kubernetes.io/portworx-volume
I0430 20:47:35.055784       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 20:47:35.979718       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 20:47:35.985637       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"c04754f2-5184-4274-ae04-db5a9b73613e", APIVersion:"v1", ResourceVersion:"53319", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-c04754f2-5184-4274-ae04-db5a9b73613e using kubernetes.io/portworx-volume
I0430 21:35:10.773681       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 21:35:11.852320       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 21:35:11.859374       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"10a650e1-4099-4c98-9d82-4fe1c7efa58e", APIVersion:"v1", ResourceVersion:"66984", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-10a650e1-4099-4c98-9d82-4fe1c7efa58e using kubernetes.io/portworx-volume
I0430 21:52:01.402687       1 portworx_util.go:58] Creating Portworx volume for PVC: px-shared-pvc
I0430 21:52:02.329370       1 portworx_util.go:112] Successfully created Portworx volume for PVC: px-shared-pvc
I0430 21:52:02.334008       1 event.go:281] Event(v1.ObjectReference{Kind:"PersistentVolumeClaim", Namespace:"default", Name:"px-shared-pvc", UID:"80eef447-8ecf-4aa0-83ae-275a51739c4d", APIVersion:"v1", ResourceVersion:"71841", FieldPath:""}): type: 'Normal' reason: 'ProvisioningSucceeded' Successfully provisioned volume pvc-80eef447-8ecf-4aa0-83ae-275a51739c4d using kubernetes.io/portworx-volume
